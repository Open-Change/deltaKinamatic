# Generated by stepconf 1.1 at Sat Dec 31 23:03:36 2005
# If you make changes to this file, they will be
# overwritten when you run stepconf again



loadrt [KINS]KINEMATICS
#loadrt 3dkinamtil
setp 3dkinamtil.Motor1x 0
setp 3dkinamtil.Motor1y 400
setp 3dkinamtil.Motor2x 300
setp 3dkinamtil.Motor2y 400
setp 3dkinamtil.Motor3x 150
setp 3dkinamtil.Motor3y 0
#// Motor konumları
#//Point2D M1 = {0, 400};    // Motor 1 konumu
#//Point2D M2 = {300, 400};  // Motor 2 konumu
#//Point2D M3 = {150, 0};    // Motor 3 konumu

#loadrt bipodkins
#setp bipodkins.Bx 1060

loadrt [EMCMOT]EMCMOT base_period_nsec=[EMCMOT]BASE_PERIOD servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[KINS]JOINTS 
#loadrt motmod base_period_nsec=50000 servo_period_nsec=1000000 num_joints=3
loadrt hal_parport cfg="0x0378 out"
setp parport.0.reset-time 5000
loadrt stepgen step_type=0,0,0




#**** ilaveler
# connect position commands from motion module to step generator
newsig Xpos float
net Xpos <= joint.0.motor-pos-cmd
net Xpos => stepgen.0.position-cmd
newsig Ypos float
net Ypos <= joint.1.motor-pos-cmd
net Ypos => stepgen.1.position-cmd
newsig Zpos float
net Zpos <= joint.2.motor-pos-cmd
net Zpos => stepgen.2.position-cmd

# loop position commands back to motion module feedback
net Xpos => joint.0.motor-pos-fb
net Ypos => joint.1.motor-pos-fb
net Zpos => joint.2.motor-pos-fb

#**** ilaveler


addf parport.0.read base-thread
addf stepgen.make-pulses base-thread
addf parport.0.write base-thread
addf parport.0.reset base-thread

addf stepgen.capture-position servo-thread
addf motion-command-handler servo-thread
addf motion-controller servo-thread
addf stepgen.update-freq servo-thread
net spindle-cmd-rpm     <= spindle.0.speed-out
net spindle-cmd-rpm-abs <= spindle.0.speed-out-abs
net spindle-cmd-rps     <= spindle.0.speed-out-rps
net spindle-cmd-rps-abs <= spindle.0.speed-out-rps-abs
net spindle-at-speed    => spindle.0.at-speed

#net xstep           => parport.0.pin-02-out
#setp parport.0.pin-02-out-reset 1
#setp parport.0.pin-03-out-invert 1
#net xdir            => parport.0.pin-03-out
#net ystep           => parport.0.pin-04-out
#setp parport.0.pin-04-out-reset 1
#setp parport.0.pin-05-out-invert 1
#net ydir            => parport.0.pin-05-out
#net zstep           => parport.0.pin-06-out
#setp parport.0.pin-06-out-reset 1
#setp parport.0.pin-07-out-invert 1
#net zdir            => parport.0.pin-07-out





net xstep           => parport.0.pin-02-out

#setp parport.0.pin-03-out-invert 1 		degilini kullanmadım

net xdir            => parport.0.pin-03-out
net ystep           => parport.0.pin-04-out
#setp parport.0.pin-05-out-invert 1		degilini kullanmadım
net ydir            => parport.0.pin-05-out
net zstep           => parport.0.pin-06-out
#setp parport.0.pin-07-out-invert 1
net zdir            => parport.0.pin-07-out



setp stepgen.0.position-scale [JOINT_0]SCALE
setp stepgen.0.steplen 1
setp stepgen.0.stepspace 0
setp stepgen.0.dirhold 25000
setp stepgen.0.dirsetup 35000
setp stepgen.0.maxaccel [JOINT_0]STEPGEN_MAXACCEL
# silindi net xpos-cmd joint.0.motor-pos-cmd => stepgen.0.position-cmd
# silindi net xpos-fb stepgen.0.position-fb => joint.0.motor-pos-fb
net xstep <= stepgen.0.step
net xdir <= stepgen.0.dir
net xenable joint.0.amp-enable-out => stepgen.0.enable

setp stepgen.1.position-scale [JOINT_1]SCALE
setp stepgen.1.steplen 1
setp stepgen.1.stepspace 0
setp stepgen.1.dirhold 25000
setp stepgen.1.dirsetup 35000
setp stepgen.1.maxaccel [JOINT_1]STEPGEN_MAXACCEL
# silindi net ypos-cmd joint.1.motor-pos-cmd => stepgen.1.position-cmd
# silindi net ypos-fb stepgen.1.position-fb => joint.1.motor-pos-fb
net ystep <= stepgen.1.step
net ydir <= stepgen.1.dir
net yenable joint.1.amp-enable-out => stepgen.1.enable

setp stepgen.2.position-scale [JOINT_2]SCALE
setp stepgen.2.steplen 1
setp stepgen.2.stepspace 0
setp stepgen.2.dirhold 25000
setp stepgen.2.dirsetup 35000
setp stepgen.2.maxaccel [JOINT_2]STEPGEN_MAXACCEL
# silindi net zpos-cmd joint.2.motor-pos-cmd => stepgen.2.position-cmd
# silindi net zpos-fb stepgen.2.position-fb => joint.2.motor-pos-fb
net zstep <= stepgen.2.step
net zdir <= stepgen.2.dir
net zenable joint.2.amp-enable-out => stepgen.2.enable

net estop-out <= iocontrol.0.user-enable-out
net estop-out => iocontrol.0.emc-enable-in

loadusr -W hal_manualtoolchange
net tool-change iocontrol.0.tool-change => hal_manualtoolchange.change
net tool-changed iocontrol.0.tool-changed <= hal_manualtoolchange.changed
net tool-number iocontrol.0.tool-prep-number => hal_manualtoolchange.number
net tool-prepare-loopback iocontrol.0.tool-prepare => iocontrol.0.tool-prepared
